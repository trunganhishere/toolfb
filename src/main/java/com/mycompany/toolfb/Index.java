/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.toolfb;

import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.*;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.edge.EdgeOptions;

import javax.swing.*;
import java.awt.*;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

/**
 *
 * @author duong
 */
public class Index extends javax.swing.JFrame {

    /**
     * Creates new form Index
     */
    public Index() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        rowIndex = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel1.setText("TOOL FB");

        jLabel2.setText("Dòng");

        jButton1.setText("Đăng nhập");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        rowIndex.setText("0");

        jButton2.setText(">");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("<");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rowIndex, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                                .addComponent(jButton1)))))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(rowIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String rowId = rowIndex.getText().trim();
if (!rowId.matches("\\d+")) {
    JOptionPane.showMessageDialog(this, "Vui lòng nhập số");
    return;
}

String emailValue = "";
String passValue = "";
String email = "";
String passwordEmail = "";
int index = Integer.parseInt(rowId);

Properties props = new Properties();
try (InputStream input = new FileInputStream("config.properties")) {
    props.load(input);

    // Lấy đường dẫn file Excel từ config
    String excelPath = props.getProperty("excel.path");
    if (excelPath == null || excelPath.isEmpty()) {
        throw new FileNotFoundException("Không tìm thấy cấu hình excel.path trong config.properties");
    }

    File excelFile = new File(excelPath);
    if (!excelFile.isAbsolute()) {
        // Nếu chỉ nhập tên file thì tự lấy từ thư mục chứa .jar
        excelFile = new File(System.getProperty("user.dir"), excelPath);
    }
    if (!excelFile.exists()) {
        throw new FileNotFoundException("Không tìm thấy file Excel: " + excelFile.getAbsolutePath());
    }

    try (FileInputStream fis = new FileInputStream(excelFile);
         Workbook workbook = new XSSFWorkbook(fis)) {

        Sheet sheet = workbook.getSheetAt(0);
        if (index - 1 < 0 || index - 1 >= sheet.getLastRowNum()) {
            JOptionPane.showMessageDialog(this, "Dòng không hợp lệ.");
            return;
        }

        Row row = sheet.getRow(index - 1);
        if (row == null) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy dòng.");
            return;
        }

        for (Cell cell : row) {
            switch (cell.getColumnIndex()) {
                case 0 -> emailValue = cell.getStringCellValue();
                case 2 -> passValue = cell.getStringCellValue();
                case 1 -> passwordEmail = cell.getStringCellValue();
            }
        }
    }
} catch (Exception e) {
    e.printStackTrace();
    return;
}

// Lấy đường dẫn EdgeDriver từ config
String edgeDriverPath = props.getProperty("edge.driver");
if (edgeDriverPath == null || edgeDriverPath.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Không tìm thấy cấu hình edge.driver trong config.properties");
    return;
}

File driverFile = new File(edgeDriverPath);
if (!driverFile.isAbsolute()) {
    driverFile = new File(System.getProperty("user.dir"), edgeDriverPath);
}
if (!driverFile.exists()) {
    JOptionPane.showMessageDialog(this, "Không tìm thấy EdgeDriver: " + driverFile.getAbsolutePath());
    return;
}

System.setProperty("webdriver.edge.driver", driverFile.getAbsolutePath());

Map<String, String> mobileEmulation = new HashMap<>();
mobileEmulation.put("deviceName", "iPhone X");

EdgeOptions options = new EdgeOptions();
options.setExperimentalOption("mobileEmulation", mobileEmulation);
EdgeOptions options1 = new EdgeOptions();

EdgeDriver driver1 = new EdgeDriver(options1);
EdgeDriver driver = new EdgeDriver(options);
driver.manage().window().setSize(new org.openqa.selenium.Dimension(350, 730));
driver1.manage().window().setSize(new org.openqa.selenium.Dimension(750, 730));

// Thread đăng nhập Facebook
String finalEmailValue = emailValue;
String finalPassValue = passValue;
Thread thread1 = new Thread(() -> {
    try {
        driver.navigate().to("https://www.facebook.com/");
        WebElement emailFB = driver.findElement(By.name("email"));
        emailFB.sendKeys(finalEmailValue);
        WebElement pass = driver.findElement(By.name("pass"));
        pass.sendKeys(finalPassValue);
        WebElement loginButton = driver.findElement(By.xpath("//div[@aria-label='Đăng nhập']"));
        loginButton.click();
        Thread.sleep(10000);
        ((JavascriptExecutor) driver).executeScript("window.open('https://accountscenter.facebook.com/password_and_security/two_factor', '_blank');");
    } catch (Exception e) {
        e.printStackTrace();
        try {
            if (driver != null) {
                try { if (!driver.getWindowHandles().isEmpty()) driver.quit(); } catch (Exception ignored) {}
            }
            if (driver1 != null) {
                try { if (!driver1.getWindowHandles().isEmpty()) driver1.quit(); } catch (Exception ignored) {}
            }
        } catch (Exception ignored) {}
    }
});

// Thread đăng nhập Mail
String finalEmail = emailValue;
String finalPasswordEmail = passwordEmail;
Thread thread2 = new Thread(() -> {
    try {
        driver1.navigate().to("https://www.mail.com/#.23140-header-navlogin2-1");
        WebElement email1 = driver1.findElement(By.id("login-email"));
        email1.sendKeys(finalEmail);
        WebElement passEmail = driver1.findElement(By.id("login-password"));
        passEmail.sendKeys(finalPasswordEmail);
        WebElement loginButton1 = driver1.findElement(By.cssSelector(".btn.btn-block.login-submit"));
        loginButton1.click();
    } catch (Exception e) {
        e.printStackTrace();
        try {
            if (driver != null) {
                try { if (!driver.getWindowHandles().isEmpty()) driver.quit(); } catch (Exception ignored) {}
            }
            if (driver1 != null) {
                try { if (!driver1.getWindowHandles().isEmpty()) driver1.quit(); } catch (Exception ignored) {}
            }
        } catch (Exception ignored) {}
    }
});

try {
    System.out.println("fb" + finalEmailValue);
    System.out.println("pass fb" + finalPassValue);
    System.out.println("em" + finalEmail);
    System.out.println("pass em" + finalPasswordEmail);

    thread2.start();
    thread1.start();
    thread1.join();
    thread2.join();
} catch (Exception e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, e.getMessage());
}

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String index = rowIndex.getText();
        if(!index.matches("\\d+") || Integer.valueOf(index) <=0 ){
            JOptionPane.showMessageDialog(this, "Kí tự trong ô không phải số!");
        }else{
            int idx = Integer.valueOf(index)-1;
            rowIndex.setText(String.valueOf(idx));
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String index = rowIndex.getText();
        if(!index.matches("\\d+")){
            JOptionPane.showMessageDialog(this, "Kí tự trong ô không phải số!");
        }else{
            int idx = Integer.valueOf(index)+1;
            rowIndex.setText(String.valueOf(idx));
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Index().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField rowIndex;
    // End of variables declaration//GEN-END:variables
}
